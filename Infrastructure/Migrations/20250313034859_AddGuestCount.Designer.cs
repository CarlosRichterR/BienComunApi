// <auto-generated />
using System;
using BIenComun.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BienComun.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250313034859_AddGuestCount")]
    partial class AddGuestCount
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BienComun.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Productos de uso doméstico",
                            Name = "Electrodomésticos"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Mobiliario para el hogar",
                            Name = "Muebles"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Herramientas para bricolaje y trabajo",
                            Name = "Herramientas"
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.GiftList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomEventType")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("EventType")
                        .HasColumnType("integer");

                    b.Property<int>("GuestCount")
                        .HasColumnType("integer");

                    b.Property<string>("ListStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("contributionPerGuest")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("GiftLists");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Refrigerador de dos puertas",
                            Name = "Refrigerador",
                            Price = 2500m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Velador de madera",
                            Name = "Velador",
                            Price = 150m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Televisor LED 55 pulgadas",
                            Name = "Televisor",
                            Price = 1800m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Lavadora automática",
                            Name = "Lavadora",
                            Price = 2200m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Juego de vajillas de porcelana",
                            Name = "Juego de Vajillas",
                            Price = 300m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Soldadora para uso industrial",
                            Name = "Soldadora Eléctrica",
                            Price = 500m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Description = "Horno microondas compacto",
                            Name = "Microondas",
                            Price = 400m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Description = "Cafetera eléctrica de acero inoxidable",
                            Name = "Cafetera",
                            Price = 120m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "Sofá de 3 plazas con tapizado de lino",
                            Name = "Sofá",
                            Price = 1000m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "Cama de madera con cabecera acolchada",
                            Name = "Cama Queen Size",
                            Price = 1200m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "Espejo decorativo de 1.5 metros",
                            Name = "Espejo de Pared",
                            Price = 250m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            Description = "Licuadora de alta velocidad",
                            Name = "Licuadora",
                            Price = 180m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            Description = "Juego de ollas de acero inoxidable",
                            Name = "Juego de Ollas",
                            Price = 350m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            Description = "Aspiradora robótica inteligente",
                            Name = "Aspiradora",
                            Price = 800m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "Silla de madera con cojín",
                            Name = "Silla de Comedor",
                            Price = 150m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "Mesa de centro de vidrio y acero",
                            Name = "Mesa de Centro",
                            Price = 400m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Description = "Taladro inalámbrico de 20V",
                            Name = "Taladro Eléctrico",
                            Price = 350m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            Description = "Barbacoa de gas con quemadores múltiples",
                            Name = "Barbacoa",
                            Price = 1500m,
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            Description = "Banco de trabajo con almacenamiento",
                            Name = "Banco de Trabajo",
                            Price = 600m,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 3,
                            Description = "Cortacésped eléctrico compacto",
                            Name = "Cortacésped",
                            Price = 900m,
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Av. Principal 123, La Paz",
                            Email = "info@multicenter.com",
                            Name = "Multicenter de Bolivia",
                            Phone = "12345678"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Secundaria 456, Santa Cruz",
                            Email = "info@dismac.com",
                            Name = "Dismac",
                            Phone = "87654321"
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 10, 20, 0, 0, 0, DateTimeKind.Utc),
                            Email = "testuser@example.com",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password123",
                            Username = "TestUser"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 10, 20, 15, 0, 0, DateTimeKind.Utc),
                            Email = "janedoe@example.com",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password456",
                            Username = "JaneDoe"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 10, 20, 30, 0, 0, DateTimeKind.Utc),
                            Email = "johnsmith@example.com",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password789",
                            Username = "JohnSmith"
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.Photo", b =>
                {
                    b.HasOne("BienComun.Core.Entities.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Product", b =>
                {
                    b.HasOne("BienComun.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BienComun.Core.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Product", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
