// <auto-generated />
using System;
using BIenComun.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BienComun.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250527043312_brand")]
    partial class brand
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BienComun.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Productos de uso doméstico",
                            Name = "Electrodomésticos"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Mobiliario para el hogar",
                            Name = "Muebles"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Herramientas para bricolaje y trabajo",
                            Name = "Herramientas"
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.GiftList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CampaignEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CampaignEndTime")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CampaignStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CampaignStartTime")
                        .HasColumnType("text");

                    b.Property<string>("CustomEventType")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EventType")
                        .HasColumnType("integer");

                    b.Property<int>("GuestCount")
                        .HasColumnType("integer");

                    b.Property<string>("ListName")
                        .HasColumnType("text");

                    b.Property<string>("ListStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double[]>("Location")
                        .HasColumnType("double precision[]");

                    b.Property<decimal>("MinContribution")
                        .HasColumnType("numeric");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<bool>("TermsAccepted")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseMinContribution")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("GiftLists");
                });

            modelBuilder.Entity("BienComun.Core.Entities.GiftListProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GiftListId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GiftListId");

                    b.HasIndex("ProductId");

                    b.ToTable("GiftListProduct");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("ReferenceUrl")
                        .HasColumnType("text");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Samsung",
                            CategoryId = 1,
                            Description = "Refrigerador de dos puertas",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Refrigerador",
                            Price = 7500m,
                            Quantity = 10,
                            ReferenceUrl = "https://www.lg.com/mx/refrigeradores",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Samsung",
                            CategoryId = 2,
                            Description = "Velador de madera",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Velador",
                            Price = 550m,
                            Quantity = 15,
                            ReferenceUrl = "https://www.liverpool.com.mx/tienda/pdp/velador-de-madera/",
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Samsung",
                            CategoryId = 1,
                            Description = "Televisor LED 55 pulgadas",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Televisor",
                            Price = 3300m,
                            Quantity = 8,
                            ReferenceUrl = "https://www.samsung.com/mx/tvs/",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Samsung",
                            CategoryId = 1,
                            Description = "Lavadora automática",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Lavadora",
                            Price = 4000m,
                            Quantity = 12,
                            ReferenceUrl = "https://www.lg.com/mx/lavadoras",
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Samsung",
                            CategoryId = 2,
                            Description = "Juego de vajillas de porcelana",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Juego de Vajillas",
                            Price = 900m,
                            Quantity = 20,
                            ReferenceUrl = "https://www.liverpool.com.mx/tienda/pdp/juego-de-vajillas/",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Samsung",
                            CategoryId = 3,
                            Description = "Soldadora para uso industrial",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Soldadora Eléctrica",
                            Price = 1200m,
                            Quantity = 5,
                            ReferenceUrl = "https://www.homedepot.com.mx/herramientas/soldadoras",
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Samsung",
                            CategoryId = 1,
                            Description = "Horno microondas compacto",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGlvJg8PYiywWaCNkmV6xo_Rh7YYtyGgLlyA&s",
                            Name = "Microondas",
                            Price = 1500m,
                            Quantity = 14,
                            ReferenceUrl = "https://www.lg.com/mx/microondas",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Samsung",
                            CategoryId = 1,
                            Description = "Cafetera eléctrica de acero inoxidable",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Cafetera",
                            Price = 320m,
                            Quantity = 18,
                            ReferenceUrl = "https://www.oster.com.mx/cafeteras/",
                            SupplierId = 2
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Samsung",
                            CategoryId = 2,
                            Description = "Sofá de 3 plazas con tapizado de lino",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnHriuHz4o1LjWMi-lGaiTD5GXhZCjTw1ITg&s",
                            Name = "Sofá",
                            Price = 3000m,
                            Quantity = 7,
                            ReferenceUrl = "https://www.liverpool.com.mx/tienda/pdp/sofa/",
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Samsung",
                            CategoryId = 2,
                            Description = "Cama de madera con cabecera acolchada",
                            ImageUrl = "https://nextlevel.com.bo/cdn/shop/products/Lavadora-Samsung-WD12T754DBN-Merkamax-img-5_1024x1024@2x.png?v=1718831587",
                            Name = "Cama Queen Size",
                            Price = 5200m,
                            Quantity = 6,
                            ReferenceUrl = "https://www.liverpool.com.mx/tienda/pdp/cama-queen-size/",
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Av. Principal 123, La Paz",
                            Email = "info@multicenter.com",
                            Name = "Multicenter de Bolivia",
                            Phone = "12345678"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Secundaria 456, Santa Cruz",
                            Email = "info@dismac.com",
                            Name = "Dismac",
                            Phone = "87654321"
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 10, 20, 0, 0, 0, DateTimeKind.Utc),
                            Email = "testuser@example.com",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password123",
                            Username = "TestUser"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 10, 20, 15, 0, 0, DateTimeKind.Utc),
                            Email = "janedoe@example.com",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password456",
                            Username = "JaneDoe"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 10, 20, 30, 0, 0, DateTimeKind.Utc),
                            Email = "johnsmith@example.com",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "password789",
                            Username = "JohnSmith"
                        });
                });

            modelBuilder.Entity("BienComun.Core.Entities.GiftListProduct", b =>
                {
                    b.HasOne("BienComun.Core.Entities.GiftList", "GiftList")
                        .WithMany("Products")
                        .HasForeignKey("GiftListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BienComun.Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiftList");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Photo", b =>
                {
                    b.HasOne("BienComun.Core.Entities.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Product", b =>
                {
                    b.HasOne("BienComun.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BienComun.Core.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BienComun.Core.Entities.GiftList", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BienComun.Core.Entities.Product", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
